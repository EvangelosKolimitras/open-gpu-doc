Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
--------------------------------------------------------------------------------

#define NV_CTRL                      0x00B7FFFF:0x00B60000 /* RW--D */
#define NV_CTRL_CPU_INTR_TOP(i)             (0x00B73400+(i)*4) /* R--4A */
#define NV_CTRL_CPU_INTR_TOP__SIZE_1 64 /*       */
#define NV_CTRL_CPU_INTR_TOP_VALUE                        31:0 /* R--VF */
#define NV_CTRL_CPU_INTR_TOP_EN_SET(i)               (0x00B73800+(i)*4) /* RW-4A */
#define NV_CTRL_CPU_INTR_TOP_EN_SET__SIZE_1   64 /*       */
#define NV_CTRL_CPU_INTR_TOP_EN_SET_VALUE                          31:0 /* RWIVF */
#define NV_CTRL_CPU_INTR_TOP_EN_SET_VALUE_INIT               0x00000000 /* R-I-V */
#define NV_CTRL_CPU_INTR_TOP_EN_CLEAR(i)             (0x00B73C00+(i)*4) /* RW-4A */
#define NV_CTRL_CPU_INTR_TOP_EN_CLEAR__SIZE_1 64 /*       */
#define NV_CTRL_CPU_INTR_TOP_EN_CLEAR_VALUE                        31:0 /* RWIVF */
#define NV_CTRL_CPU_INTR_TOP_EN_CLEAR_VALUE_INIT             0x00000000 /* R-I-V */
#define NV_CTRL_CPU_INTR_LEAF(i)                                         (0x00B74000+(i)*4) /* RW-4A */
#define NV_CTRL_CPU_INTR_LEAF__SIZE_1    1024 /*       */
#define NV_CTRL_CPU_INTR_LEAF_VALUE                                                    31:0 /* RWIVF */
#define NV_CTRL_CPU_INTR_LEAF_VALUE_INIT                                         0x00000000 /* R-I-V */
#define NV_CTRL_CPU_INTR_LEAF_ARRAY_SIZE_PER_FN  16 /*       */
#define NV_CTRL_CPU_INTR_LEAF_EN_SET(i)                                           (0x00B78000+(i)*4) /* RW-4A */
#define NV_CTRL_CPU_INTR_LEAF_EN_SET__SIZE_1      1024 /*       */
#define NV_CTRL_CPU_INTR_LEAF_EN_SET_VALUE                                                      31:0 /* RWIVF */
#define NV_CTRL_CPU_INTR_LEAF_EN_SET_VALUE_INIT                                           0x00000000 /* R-I-V */
#define NV_CTRL_CPU_INTR_LEAF_EN_CLEAR(i)                                         (0x00B7C000+(i)*4) /* RW-4A */
#define NV_CTRL_CPU_INTR_LEAF_EN_CLEAR__SIZE_1    1024 /*       */
#define NV_CTRL_CPU_INTR_LEAF_EN_CLEAR_VALUE                                                    31:0 /* RWIVF */
#define NV_CTRL_CPU_INTR_LEAF_EN_CLEAR_VALUE_INIT                                         0x00000000 /* R-I-V */
#define NV_CTRL_LEGACY_ENGINE_STALL_INTR_BASE_VECTORID         0xB66880 /* C--4R */
#define NV_CTRL_LEGACY_ENGINE_STALL_INTR_BASE_VECTORID_VECTOR      11:0 /* C--UF */
#define NV_CTRL_LEGACY_ENGINE_STALL_INTR_BASE_VECTORID_VECTOR_INIT   192 /* C---V */
#define NV_CTRL_LEGACY_ENGINE_NONSTALL_INTR_BASE_VECTORID       0xB66884 /* C--4R */
#define NV_CTRL_LEGACY_ENGINE_NONSTALL_INTR_BASE_VECTORID_VECTOR    11:0 /* C--UF */
#define NV_CTRL_LEGACY_ENGINE_NONSTALL_INTR_BASE_VECTORID_VECTOR_INIT   0 /* C---V */
#define NV_CTRL_MAILBOX_SCRATCH(i)                (0x00B60000+(i)*4) /* RW-4A */
#define NV_CTRL_MAILBOX_SCRATCH__SIZE_1 1024 /*       */
#define NV_CTRL_MAILBOX_SCRATCH_DATA                            31:0 /* RWXVF */
#define NV_CTRL_DOORBELL(i)                          (0x00B64000+(i)*8) /*       */
#define NV_CTRL_DOORBELL__SIZE_1                64 /*       */
#define NV_CTRL_DOORBELL_HANDLE                  31:0 /*       */
#define NV_CTRL_DOORBELL_VECTOR                  11:0 /*       */
#define NV_CTRL_DOORBELL_RSVD                      15:12 /*       */
#define NV_CTRL_DOORBELL_RUNLIST_ID          22:16 /*       */
#define NV_CTRL_DOORBELL_RUNLIST_ID_ALL  15 /*       */
#define NV_CTRL_DOORBELL_RSVD2                    31:23 /*       */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG(i)                    (0x00B65000+(i)*4) /* RW-4A */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG__SIZE_1        64 /*       */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_MASK                                11:0 /* RWIVF */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_MASK_INIT                          0xFFF /* RWI-V */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_SET                                27:16 /* RWIVF */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_SET_INIT                             0x0 /* RWI-V */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_PENDING_ENABLE                     31:31 /* RWIVF */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_PENDING_ENABLE_TRUE                    1 /* RW--V */
#define NV_CTRL_VIRTUAL_CHANNEL_CFG_PENDING_ENABLE_FALSE                   0 /* RWI-V */
#define NV_CTRL_PRIV_DOORBELL(i)                                          (0x00B64800+(i)*8) /*       */
#define NV_CTRL_PRIV_DOORBELL__SIZE_1                                64 /*       */
#define NV_CTRL_PRIV_DOORBELL_HANDLE                                  31:0 /*       */
#define NV_CTRL_PRIV_DOORBELL_VECTOR                                  11:0 /*       */
#define NV_CTRL_PRIV_DOORBELL_RSVD                                      30:12 /*       */
#define NV_CTRL_PRIV_DOORBELL_CPU_NOTIFICATION              31:31 /*       */
#define NV_CTRL_PRIV_DOORBELL_CPU_NOTIFICATION_TRUE    1 /*       */
#define NV_CTRL_PRIV_DOORBELL_CPU_NOTIFICATION_FALSE  0 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF(i)              (0x00B66800+(i)*4) /* RW-4A */
#define NV_CTRL_VIRTUAL_INTR_LEAF__SIZE_1                          2 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_PENDING                       31:0 /* RWIVF */
#define NV_CTRL_VIRTUAL_INTR_LEAF_PENDING_INIT                     0 /* RWI-V */
#define NV_CTRL_VIRTUAL_INTR_LEAF_PENDING_INTR                     1 /* R---V */
#define NV_CTRL_VIRTUAL_INTR_LEAF_PENDING_CLEAR                    1 /* -W--V */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET(i)           (0x00B66820+(i)*4) /* RW-4A */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET__SIZE_1                       2 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VALUE                      31:0 /* RWIVF */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VALUE_INIT                    0 /* RWI-V */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VECTOR(i)                   (i) /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VECTOR_ENABLE                 1 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VECTOR_ENABLED                1 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_SET_VECTOR_DISABLED               0 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR(i)         (0x00B66840+(i)*4) /* RW-4A */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR__SIZE_1                     2 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VALUE                    31:0 /* RWIVF */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VALUE_INIT                  0 /* RWI-V */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VECTOR(i)                 (i) /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VECTOR_DISABLE              1 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VECTOR_ENABLED              1 /*       */
#define NV_CTRL_VIRTUAL_INTR_LEAF_EN_CLEAR_VECTOR_DISABLED             0 /*       */
#define NV_CTRL_VIRTUAL_INTR_RETRIGGER                    0x00B66870 /* -W-4R */
#define NV_CTRL_VIRTUAL_INTR_RETRIGGER_FIELD                     0:0 /* -WXVF */
#define NV_CTRL_VIRTUAL_INTR_RETRIGGER_FIELD_RETRIGGER             1 /* -W--V */
#define NV_CTRL_VIRTUAL_INTR_VECTORID                                       0x00B66874 /* C--4R */
#define NV_CTRL_VIRTUAL_INTR_VECTORID_VALUE                                       11:0 /* C--VF */
#define NV_CTRL_VIRTUAL_INTR_VECTORID_VALUE_CONSTANT 130 /* C---V */
#define NV_CTRL_CPU_INTR_LEAF_TRIGGER(i)                   (0x00B66C00+(i)*4) /* -W-4A */
#define NV_CTRL_CPU_INTR_LEAF_TRIGGER__SIZE_1       64 /*       */
#define NV_CTRL_CPU_INTR_LEAF_TRIGGER_VECTOR                             11:0 /* -WXVF */
#define NV_CTRL_CPU_DOORBELL_VECTORID                                      0x00B6687C /* C--4R */
#define NV_CTRL_CPU_DOORBELL_VECTORID_VALUE                                      11:0 /* C--VF */
#define NV_CTRL_CPU_DOORBELL_VECTORID_VALUE_CONSTANT 129 /* C---V */
#define NV_CTRL_SW_INTR_NOSTALL_VECTORID                                         0x00B6688C /* C--4R */
#define NV_CTRL_SW_INTR_NOSTALL_VECTORID_VALUE                                         11:0 /* C--VF */
#define NV_CTRL_SW_INTR_NOSTALL_VECTORID_VALUE_CONSTANT 31 /* C---V */

--------------------------------------------------------------------------------
                         KEY LEGEND
--------------------------------------------------------------------------------

Each define in the .ref file has a 5 field code to say what kind of define it is: i.e. /* RW--R */
The following legend shows accepted values for each of the 5 fields:
  Read, Write, Internal State, Declaration/Size, and Define Indicator.

  Read
    ' ' = Other Information
    '-' = Field is part of a write-only register
    'C' = Value read is always the same, constant value line follows (C)
    'R' = Value is read


  Write
    ' ' = Other Information
    '-' = Must not be written (D), value ignored when written (R,A,F)
    'W' = Can be written


  Internal State
    ' ' = Other Information
    '-' = No internal state
    'X' = Internal state, initial value is unknown
    'I' = Internal state, initial value is known and follows (I), see "Reset Signal" section for signal.
    'E' = Internal state, initial value is known and follows (E), see "Reset Signal" section for signal.
    'B' = Internal state, initial value is known and follows (B), see "Reset Signal" section for signal.
    'C' = Internal state, initial value is known and follows (C), see "Reset Signal" section for signal.

    'V' = (legacy) Internal state, initialize at volatile reset
    'D' = (legacy) Internal state, default initial value at object creation (legacy: Only used in dev_ram.ref)
    'C' = (legacy) Internal state, initial value at object creation
    'C' = (legacy) Internal state, class-based initial value at object creation (legacy: Only used in dev_ram.ref)


  Declaration/Size
    ' ' = Other Information
    '-' = Does Not Apply
    'V' = Type is void
    'U' = Type is unsigned integer
    'S' = Type is signed integer
    'F' = Type is IEEE floating point
    '1' = Byte size (008)
    '2' = Short size (016)
    '3' = Three byte size (024)
    '4' = Word size (032)
    '8' = Double size (064)


  Define Indicator
    ' ' = Other Information
    'C' = Clear value
    'D' = Device
    'L' = Logical device.
    'M' = Memory
    'R' = Register
    'A' = Array of Registers
    'F' = Field
    'V' = Value
    'T' = Task
    'P' = Phantom Register

    'B' = (legacy) Bundle address
    'G' = (legacy) General purpose configuration register
    'C' = (legacy) Class

  Reset signal defaults for graphics engine registers.
    All graphics engine registers use the following defaults for reset signals:
     'E' = initialized with engine_reset_
     'I' = initialized with context_reset_
     'B' = initialized with reset_IB_dly_

  Reset signal
    For units that differ from the graphics engine defaults, the reset signals should be defined here:
